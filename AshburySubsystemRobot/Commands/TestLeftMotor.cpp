// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "TestLeftMotor.h"
#include "SmartDashboard/SmartDashboard.h"
#include "../UserMessagePrinter.h"
TestLeftMotor::TestLeftMotor() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	
	speedToExecute = 0.0;
	timeToExecute = 0.0;
}
// Called just before this Command runs the first time
void TestLeftMotor::Initialize() {
	timeToExecute = SmartDashboard::GetNumber("Test Left Motor Timeout");
	speedToExecute = SmartDashboard::GetNumber("Test Left Motor Speed");
	SetTimeout(timeToExecute);
	Robot::driveTrain->leftDriveMotor->Set(speedToExecute);
	printf("initialize test left motor for %f seconds at %f", timeToExecute, speedToExecute);
}
// Called repeatedly when this Command is scheduled to run
void TestLeftMotor::Execute() {
	Robot::driveTrain->leftDriveMotor->Set(speedToExecute);	
}
// Make this return true when this Command no longer needs to run execute()
bool TestLeftMotor::IsFinished() {
	return IsTimedOut();
}
// Called once after isFinished returns true
void TestLeftMotor::End() {
	Robot::driveTrain->leftDriveMotor->Set(0.0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void TestLeftMotor::Interrupted() {
	Robot::driveTrain->leftDriveMotor->Set(0.0);
}
