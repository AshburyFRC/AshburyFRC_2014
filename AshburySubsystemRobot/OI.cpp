// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveWithJoysticks.h"
#include "Commands/TestLeftMotor.h"
#include "Commands/TestRightMotor.h"
#include "RobotDefs.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	joystick2 = new Joystick(2);
	
	joystick1 = new Joystick(1);
	
	fireTestRightMotorButton = new JoystickButton(joystick1, 2);
	fireTestRightMotorButton->WhenPressed(new TestRightMotor());
	fireTestLeftMotorButton = new JoystickButton(joystick1, 1);
	fireTestLeftMotorButton->WhenPressed(new TestLeftMotor());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Test Left Motor", new TestLeftMotor());
	SmartDashboard::PutData("Test Right Motor", new TestRightMotor());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	
	SmartDashboard::PutNumber("Test Left Motor Timeout", 1.0);
	SmartDashboard::PutNumber("Test Right Motor Timeout", 2.0);
	SmartDashboard::PutNumber("Test Left Motor Speed", 0.5);
	SmartDashboard::PutNumber("Test Right Motor Speed", 0.5);
	
	SendableChooser* robotDriveChooser = new SendableChooser();
	RobotDriveType* driveType = new RobotDriveType();
	*driveType = TANK_DRIVE;
	robotDriveChooser->AddDefault("Tank Drive", driveType);
	driveType = new RobotDriveType();
	*driveType = ARCADE_DRIVE;
	robotDriveChooser->AddDefault("Arcade Drive", driveType);
	SmartDashboard::PutData("Robot Drive Type", robotDriveChooser);
	
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getJoystick2() {
	return joystick2;
}
Joystick* OI::getJoystick1() {
	return joystick1;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
