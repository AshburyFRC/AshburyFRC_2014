// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4825.PlyBoy.subsystems;

import org.usfirst.frc4825.PlyBoy.RobotMap;
import org.usfirst.frc4825.PlyBoy.commands.*;
import edu.wpi.first.wpilibj.ADXL345_I2C;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Accelerometer extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    ADXL345_I2C accel = new ADXL345_I2C(1, ADXL345_I2C.DataFormat_Range.k2G);
    double accelerationX;
    double accelerationY;
    double accelerationZ;
    ADXL345_I2C.AllAxes accelerations;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new UpdateAccelerometer());
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }  
    public double GetAccelerationX(){
            accelerationX = accel.getAcceleration(ADXL345_I2C.Axes.kX);
            return accel.getAcceleration(ADXL345_I2C.Axes.kX);
    }
    
    public double GetAccelerationY(){
            accelerationY = accel.getAcceleration(ADXL345_I2C.Axes.kY);
            return accel.getAcceleration(ADXL345_I2C.Axes.kY);
    }
    
    public double GetAccelerationZ(){
            accelerationZ = accel.getAcceleration(ADXL345_I2C.Axes.kZ);
            return accel.getAcceleration(ADXL345_I2C.Axes.kZ);
    }
    
}