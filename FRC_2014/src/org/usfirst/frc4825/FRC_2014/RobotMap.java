// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4825.FRC_2014;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainLeftMotor1;
    public static SpeedController driveTrainLeftMotor2;
    public static SpeedController driveTrainRightMotor1;
    public static SpeedController driveTrainRightMotor2;
    public static RobotDrive driveTrainRobotDrive41;
    public static SpeedController hammerHammerMotorController;
    public static Solenoid hammerLatchSolenoid;
    public static DigitalInput hammerHammerLatchSwitch;
    public static DigitalInput hammerShaftResetSwitch;
    public static SpeedController armsArmBeltMotorController;
    public static Solenoid armsArmPositionSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeftMotor1 = new Victor(1, 4);
	LiveWindow.addActuator("Drive Train", "Left Motor 1", (Victor) driveTrainLeftMotor1);
        
        driveTrainLeftMotor2 = new Victor(1, 3);
	LiveWindow.addActuator("Drive Train", "Left Motor 2", (Victor) driveTrainLeftMotor2);
        
        driveTrainRightMotor1 = new Victor(1, 2);
	LiveWindow.addActuator("Drive Train", "Right Motor 1", (Victor) driveTrainRightMotor1);
        
        driveTrainRightMotor2 = new Victor(1, 1);
	LiveWindow.addActuator("Drive Train", "Right Motor 2", (Victor) driveTrainRightMotor2);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainLeftMotor1, driveTrainLeftMotor2,
              driveTrainRightMotor1, driveTrainRightMotor2);
	
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);
        hammerHammerMotorController = new Victor(1, 5);
	LiveWindow.addActuator("Hammer", "HammerMotorController", (Victor) hammerHammerMotorController);
        
        hammerLatchSolenoid = new Solenoid(1, 1);
	LiveWindow.addActuator("Hammer", "LatchSolenoid", hammerLatchSolenoid);
        
        hammerHammerLatchSwitch = new DigitalInput(1, 1);
	LiveWindow.addSensor("Hammer", "HammerLatchSwitch", hammerHammerLatchSwitch);
        
        hammerShaftResetSwitch = new DigitalInput(1, 2);
	LiveWindow.addSensor("Hammer", "ShaftResetSwitch", hammerShaftResetSwitch);
        
        armsArmBeltMotorController = new Victor(1, 6);
	LiveWindow.addActuator("Arms", "ArmBeltMotorController", (Victor) armsArmBeltMotorController);
        
        armsArmPositionSolenoid = new Solenoid(1, 2);
	LiveWindow.addActuator("Arms", "ArmPositionSolenoid", armsArmPositionSolenoid);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
